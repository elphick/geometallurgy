
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/examples/03_flowsheet/03_filtering_flowsheet.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_examples_03_flowsheet_03_filtering_flowsheet.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_examples_03_flowsheet_03_filtering_flowsheet.py:


Filtering Flowsheets
====================

Flowsheets contain a network of streams and operations.  The streams contain data in the form of a pandas DataFrame.
This example demonstrates how to filter the data across a flowsheet.
The streams on a flowsheet are all congruent by definition - that is they have the same index.
Any applied filter is applied across all streams to ensure the streams remain congruent.

.. GENERATED FROM PYTHON SOURCE LINES 11-18

.. code-block:: Python


    import pandas as pd

    from elphick.geomet.flowsheet import Flowsheet
    from elphick.geomet.flowsheet.stream import Stream
    from elphick.geomet.utils.data import sample_data








.. GENERATED FROM PYTHON SOURCE LINES 19-23

Create some Sample objects
--------------------------

Create an object, and split it to create two more objects.

.. GENERATED FROM PYTHON SOURCE LINES 24-29

.. code-block:: Python


    df_data: pd.DataFrame = sample_data()
    obj_strm: Stream = Stream(df_data, name='Feed')
    obj_strm_1, obj_strm_2 = obj_strm.split(0.4, name_1='stream 1', name_2='stream 2')








.. GENERATED FROM PYTHON SOURCE LINES 30-31

View the Feed records

.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: Python

    obj_strm.data






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
          <th>group</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>100.0</td>
          <td>90.0</td>
          <td>10.000000</td>
          <td>57.0</td>
          <td>5.2</td>
          <td>3.0</td>
          <td>5.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>1</th>
          <td>90.0</td>
          <td>80.0</td>
          <td>11.111111</td>
          <td>59.0</td>
          <td>3.1</td>
          <td>1.7</td>
          <td>4.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>2</th>
          <td>110.0</td>
          <td>90.0</td>
          <td>18.181818</td>
          <td>61.0</td>
          <td>2.2</td>
          <td>0.9</td>
          <td>3.0</td>
          <td>grp_2</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 34-38

Create a Flowsheet object
-------------------------

This requires passing an Iterable of Sample objects

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python


    fs: Flowsheet = Flowsheet.from_objects([obj_strm, obj_strm_1, obj_strm_2])
    fs.report()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
        </tr>
        <tr>
          <th>name</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>Feed</th>
          <td>300.0</td>
          <td>260.0</td>
          <td>13.333333</td>
          <td>59.0</td>
          <td>3.515385</td>
          <td>1.873077</td>
          <td>4.0</td>
        </tr>
        <tr>
          <th>stream 1</th>
          <td>120.0</td>
          <td>104.0</td>
          <td>13.333333</td>
          <td>59.0</td>
          <td>3.515385</td>
          <td>1.873077</td>
          <td>4.0</td>
        </tr>
        <tr>
          <th>stream 2</th>
          <td>180.0</td>
          <td>156.0</td>
          <td>13.333333</td>
          <td>59.0</td>
          <td>3.515385</td>
          <td>1.873077</td>
          <td>4.0</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-47

Filter using `query`
--------------------
In this case, we wish to avoid mutating the original data, so we set `inplace=False`.

.. GENERATED FROM PYTHON SOURCE LINES 47-51

.. code-block:: Python


    fs_query: Flowsheet = fs.query(expr='Fe>58', stream_name='Feed', inplace=False)
    fs_query.report()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
        </tr>
        <tr>
          <th>name</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>Feed</th>
          <td>200.0</td>
          <td>170.0</td>
          <td>15.0</td>
          <td>60.058824</td>
          <td>2.623529</td>
          <td>1.276471</td>
          <td>3.470588</td>
        </tr>
        <tr>
          <th>stream 1</th>
          <td>80.0</td>
          <td>68.0</td>
          <td>15.0</td>
          <td>60.058824</td>
          <td>2.623529</td>
          <td>1.276471</td>
          <td>3.470588</td>
        </tr>
        <tr>
          <th>stream 2</th>
          <td>120.0</td>
          <td>102.0</td>
          <td>15.0</td>
          <td>60.058824</td>
          <td>2.623529</td>
          <td>1.276471</td>
          <td>3.470588</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    fs_query.get_stream_by_name('Feed').data






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
          <th>group</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>1</th>
          <td>90.0</td>
          <td>80.0</td>
          <td>11.111111</td>
          <td>59.0</td>
          <td>3.1</td>
          <td>1.7</td>
          <td>4.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>2</th>
          <td>110.0</td>
          <td>90.0</td>
          <td>18.181818</td>
          <td>61.0</td>
          <td>2.2</td>
          <td>0.9</td>
          <td>3.0</td>
          <td>grp_2</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 55-58

Filter using `filter_by_index`
------------------------------
When more complex filtering is required, we can filter by an index.

.. GENERATED FROM PYTHON SOURCE LINES 58-63

.. code-block:: Python


    new_index: pd.Index = obj_strm.data.index[1:]
    fs_filter: Flowsheet = fs.filter_by_index(index=new_index, inplace=False)
    fs_filter.report()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
        </tr>
        <tr>
          <th>name</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>Feed</th>
          <td>200.0</td>
          <td>170.0</td>
          <td>15.0</td>
          <td>60.058824</td>
          <td>2.623529</td>
          <td>1.276471</td>
          <td>3.470588</td>
        </tr>
        <tr>
          <th>stream 1</th>
          <td>80.0</td>
          <td>68.0</td>
          <td>15.0</td>
          <td>60.058824</td>
          <td>2.623529</td>
          <td>1.276471</td>
          <td>3.470588</td>
        </tr>
        <tr>
          <th>stream 2</th>
          <td>120.0</td>
          <td>102.0</td>
          <td>15.0</td>
          <td>60.058824</td>
          <td>2.623529</td>
          <td>1.276471</td>
          <td>3.470588</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 64-65

.. code-block:: Python

    fs_filter.get_stream_by_name('Feed').data





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
          <th>group</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>1</th>
          <td>90.0</td>
          <td>80.0</td>
          <td>11.111111</td>
          <td>59.0</td>
          <td>3.1</td>
          <td>1.7</td>
          <td>4.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>2</th>
          <td>110.0</td>
          <td>90.0</td>
          <td>18.181818</td>
          <td>61.0</td>
          <td>2.2</td>
          <td>0.9</td>
          <td>3.0</td>
          <td>grp_2</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.799 seconds)


.. _sphx_glr_download_auto_examples_examples_03_flowsheet_03_filtering_flowsheet.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 03_filtering_flowsheet.ipynb <03_filtering_flowsheet.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 03_filtering_flowsheet.py <03_filtering_flowsheet.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
