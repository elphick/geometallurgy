
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/examples/02_interval_sample/01_interval_sample.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_examples_02_interval_sample_01_interval_sample.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_examples_02_interval_sample_01_interval_sample.py:


Interval Data
=============

This example adds a second dimension.  The second dimension is an interval, of the form interval_from, interval_to.
It is also known as binned data, where each 'bin' is bounded between and upper and lower limit.

An interval is relevant in geology, when analysing drill hole data.

Intervals are also encountered in metallurgy, but in that discipline they are often called fractions,
e.g. size fractions.  In that case the typical nomenclature is size_retained, size passing, since the data
originates from a sieve stack.

.. GENERATED FROM PYTHON SOURCE LINES 15-26

.. code-block:: Python

    import logging

    import pandas as pd
    import plotly.io
    from matplotlib import pyplot as plt

    from elphick.geomet import Sample, IntervalSample
    from elphick.geomet.data.downloader import Downloader
    from elphick.geomet.utils.pandas import weight_average
    import plotly.graph_objects as go








.. GENERATED FROM PYTHON SOURCE LINES 27-32

.. code-block:: Python

    logging.basicConfig(level=logging.INFO,
                        format='%(asctime)s %(levelname)s %(module)s - %(funcName)s: %(message)s',
                        datefmt='%Y-%m-%dT%H:%M:%S%z',
                        )








.. GENERATED FROM PYTHON SOURCE LINES 33-38

Create a MassComposition object
-------------------------------

We get some demo data in the form of a pandas DataFrame
We create this object as 1D based on the pandas index

.. GENERATED FROM PYTHON SOURCE LINES 39-44

.. code-block:: Python


    iron_ore_sample_data: pd.DataFrame = Downloader().load_data(datafile='iron_ore_sample_A072391.zip', show_report=False)
    df_data: pd.DataFrame = iron_ore_sample_data
    df_data.head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>index</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>MgO</th>
          <th>MnO</th>
          <th>Al2O3</th>
          <th>P</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>TiO2</th>
          <th>CaO</th>
          <th>Na2O</th>
          <th>K2O</th>
          <th>DHID</th>
          <th>interval_from</th>
          <th>interval_to</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>6</td>
          <td>2.12</td>
          <td>0.35</td>
          <td>0.07</td>
          <td>0.0</td>
          <td>1.48</td>
          <td>0.019</td>
          <td>64.30</td>
          <td>3.23</td>
          <td>0.080</td>
          <td>0.04</td>
          <td>0.01</td>
          <td>0.03</td>
          <td>CBS02</td>
          <td>26.60</td>
          <td>26.85</td>
        </tr>
        <tr>
          <th>1</th>
          <td>7</td>
          <td>2.06</td>
          <td>0.23</td>
          <td>0.06</td>
          <td>0.0</td>
          <td>1.28</td>
          <td>0.017</td>
          <td>64.91</td>
          <td>2.90</td>
          <td>0.082</td>
          <td>0.04</td>
          <td>0.01</td>
          <td>0.03</td>
          <td>CBS02</td>
          <td>26.85</td>
          <td>27.10</td>
        </tr>
        <tr>
          <th>2</th>
          <td>9</td>
          <td>1.91</td>
          <td>0.23</td>
          <td>0.06</td>
          <td>0.0</td>
          <td>1.01</td>
          <td>0.016</td>
          <td>65.09</td>
          <td>2.39</td>
          <td>0.059</td>
          <td>0.03</td>
          <td>0.01</td>
          <td>0.02</td>
          <td>CBS02</td>
          <td>27.70</td>
          <td>28.00</td>
        </tr>
        <tr>
          <th>3</th>
          <td>10</td>
          <td>1.96</td>
          <td>0.36</td>
          <td>0.06</td>
          <td>0.0</td>
          <td>0.99</td>
          <td>0.022</td>
          <td>65.03</td>
          <td>2.22</td>
          <td>0.057</td>
          <td>0.04</td>
          <td>0.01</td>
          <td>0.02</td>
          <td>CBS02</td>
          <td>28.00</td>
          <td>28.30</td>
        </tr>
        <tr>
          <th>4</th>
          <td>12</td>
          <td>2.06</td>
          <td>0.40</td>
          <td>0.05</td>
          <td>0.0</td>
          <td>0.75</td>
          <td>0.016</td>
          <td>65.87</td>
          <td>1.69</td>
          <td>0.040</td>
          <td>0.03</td>
          <td>0.01</td>
          <td>0.01</td>
          <td>CBS02</td>
          <td>28.60</td>
          <td>28.95</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python


    obj_mc: Sample = Sample(df_data, name='Drill program')
    obj_mc





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <elphick.geomet.sample.Sample object at 0x7f36e8970980>



.. GENERATED FROM PYTHON SOURCE LINES 50-53

.. code-block:: Python


    obj_mc.aggregate






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>mass_wet</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>MgO</th>
          <th>MnO</th>
          <th>Al2O3</th>
          <th>P</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>TiO2</th>
          <th>CaO</th>
          <th>Na2O</th>
          <th>K2O</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>2029.617808</td>
          <td>1981.688</td>
          <td>2.361519</td>
          <td>0.080513</td>
          <td>0.149219</td>
          <td>1.773585</td>
          <td>0.044628</td>
          <td>60.443938</td>
          <td>2.82721</td>
          <td>0.062978</td>
          <td>0.125071</td>
          <td>0.015877</td>
          <td>0.013164</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 54-56

Use the normal pandas groupby-apply as needed.  Here we leverage the weight_average function
from utils.pandas

.. GENERATED FROM PYTHON SOURCE LINES 57-61

.. code-block:: Python


    hole_average: pd.DataFrame = obj_mc.data.groupby('DHID').apply(weight_average)
    hole_average





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/geometallurgy/geometallurgy/examples/02_interval_sample/01_interval_sample.py:58: DeprecationWarning:

    DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th>weight_average</th>
          <th>mass_dry</th>
          <th>MgO</th>
          <th>MnO</th>
          <th>Al2O3</th>
          <th>P</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>TiO2</th>
          <th>CaO</th>
          <th>Na2O</th>
          <th>K2O</th>
        </tr>
        <tr>
          <th>DHID</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>CBS02</th>
          <td>46.310</td>
          <td>0.055636</td>
          <td>0.000000</td>
          <td>1.029685</td>
          <td>0.022764</td>
          <td>64.656675</td>
          <td>2.589849</td>
          <td>0.053834</td>
          <td>0.029160</td>
          <td>0.010436</td>
          <td>0.017296</td>
        </tr>
        <tr>
          <th>CBS03</th>
          <td>226.250</td>
          <td>0.132968</td>
          <td>0.038134</td>
          <td>1.399500</td>
          <td>0.046587</td>
          <td>60.297271</td>
          <td>3.653106</td>
          <td>0.052016</td>
          <td>0.699112</td>
          <td>0.030318</td>
          <td>0.019871</td>
        </tr>
        <tr>
          <th>CBS04</th>
          <td>344.680</td>
          <td>0.088788</td>
          <td>0.126484</td>
          <td>1.513147</td>
          <td>0.038461</td>
          <td>60.289083</td>
          <td>3.319658</td>
          <td>0.050986</td>
          <td>0.093096</td>
          <td>0.001773</td>
          <td>0.011788</td>
        </tr>
        <tr>
          <th>CBS10</th>
          <td>304.690</td>
          <td>0.044836</td>
          <td>0.091520</td>
          <td>1.963728</td>
          <td>0.059062</td>
          <td>61.001839</td>
          <td>2.949455</td>
          <td>0.061461</td>
          <td>0.060045</td>
          <td>0.014310</td>
          <td>0.012509</td>
        </tr>
        <tr>
          <th>CBS12</th>
          <td>493.968</td>
          <td>0.090723</td>
          <td>0.247394</td>
          <td>1.854824</td>
          <td>0.032990</td>
          <td>60.572344</td>
          <td>2.491186</td>
          <td>0.067683</td>
          <td>0.045545</td>
          <td>0.016941</td>
          <td>0.014323</td>
        </tr>
        <tr>
          <th>CBS13</th>
          <td>565.790</td>
          <td>0.066832</td>
          <td>0.165065</td>
          <td>1.969400</td>
          <td>0.051777</td>
          <td>59.839565</td>
          <td>2.443914</td>
          <td>0.072125</td>
          <td>0.027301</td>
          <td>0.019054</td>
          <td>0.010321</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 62-63

We will now make a 2D dataset using DHID and the intervals.

.. GENERATED FROM PYTHON SOURCE LINES 64-70

.. code-block:: Python

    df_data['DHID'] = df_data['DHID'].astype('category')
    df_data = df_data.reset_index(drop=True).set_index(['DHID', 'interval_from', 'interval_to'])

    obj_mc_2d: IntervalSample = IntervalSample(df_data, name='Drill program')
    print(obj_mc_2d)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    IntervalSample: Drill program
    {'mass_wet': {0: 2029.6178076448032}, 'mass_dry': {0: 1981.688}, 'H2O': {0: 2.3615188763258583}, 'MgO': {0: 0.08051321903347046}, 'MnO': {0: 0.14921928174364477}, 'Al2O3': {0: 1.773585095131019}, 'P': {0: 0.044627670955266416}, 'Fe': {0: 60.443937895370006}, 'SiO2': {0: 2.827210176374888}, 'TiO2': {0: 0.06297808534945964}, 'CaO': {0: 0.12507133312610258}, 'Na2O': {0: 0.015876646576050316}, 'K2O': {0: 0.013163565606694896}}




.. GENERATED FROM PYTHON SOURCE LINES 71-73

.. code-block:: Python

    obj_mc_2d.aggregate






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>mass_wet</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>MgO</th>
          <th>MnO</th>
          <th>Al2O3</th>
          <th>P</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>TiO2</th>
          <th>CaO</th>
          <th>Na2O</th>
          <th>K2O</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>2029.617808</td>
          <td>1981.688</td>
          <td>2.361519</td>
          <td>0.080513</td>
          <td>0.149219</td>
          <td>1.773585</td>
          <td>0.044628</td>
          <td>60.443938</td>
          <td>2.82721</td>
          <td>0.062978</td>
          <td>0.125071</td>
          <td>0.015877</td>
          <td>0.013164</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 74-76

.. code-block:: Python

    obj_mc_2d.data.groupby('DHID').apply(weight_average, **{'mass_wet': 'mass_wet', 'moisture_column_name': 'H2O'})






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th>weight_average</th>
          <th>mass_wet</th>
          <th>mass_dry</th>
          <th>h2o</th>
          <th>MgO</th>
          <th>MnO</th>
          <th>Al2O3</th>
          <th>P</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>TiO2</th>
          <th>CaO</th>
          <th>Na2O</th>
          <th>K2O</th>
        </tr>
        <tr>
          <th>DHID</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>CBS02</th>
          <td>46.614043</td>
          <td>46.310</td>
          <td>0.652257</td>
          <td>0.055636</td>
          <td>0.000000</td>
          <td>1.029685</td>
          <td>0.022764</td>
          <td>64.656675</td>
          <td>2.589849</td>
          <td>0.053834</td>
          <td>0.029160</td>
          <td>0.010436</td>
          <td>0.017296</td>
        </tr>
        <tr>
          <th>CBS03</th>
          <td>229.414089</td>
          <td>226.250</td>
          <td>1.379204</td>
          <td>0.132968</td>
          <td>0.038134</td>
          <td>1.399500</td>
          <td>0.046587</td>
          <td>60.297271</td>
          <td>3.653106</td>
          <td>0.052016</td>
          <td>0.699112</td>
          <td>0.030318</td>
          <td>0.019871</td>
        </tr>
        <tr>
          <th>CBS04</th>
          <td>347.440438</td>
          <td>344.680</td>
          <td>0.794507</td>
          <td>0.088788</td>
          <td>0.126484</td>
          <td>1.513147</td>
          <td>0.038461</td>
          <td>60.289083</td>
          <td>3.319658</td>
          <td>0.050986</td>
          <td>0.093096</td>
          <td>0.001773</td>
          <td>0.011788</td>
        </tr>
        <tr>
          <th>CBS10</th>
          <td>306.500146</td>
          <td>304.690</td>
          <td>0.590586</td>
          <td>0.044836</td>
          <td>0.091520</td>
          <td>1.963728</td>
          <td>0.059062</td>
          <td>61.001839</td>
          <td>2.949455</td>
          <td>0.061461</td>
          <td>0.060045</td>
          <td>0.014310</td>
          <td>0.012509</td>
        </tr>
        <tr>
          <th>CBS12</th>
          <td>506.098042</td>
          <td>493.968</td>
          <td>2.396777</td>
          <td>0.090723</td>
          <td>0.247394</td>
          <td>1.854824</td>
          <td>0.032990</td>
          <td>60.572344</td>
          <td>2.491186</td>
          <td>0.067683</td>
          <td>0.045545</td>
          <td>0.016941</td>
          <td>0.014323</td>
        </tr>
        <tr>
          <th>CBS13</th>
          <td>593.551050</td>
          <td>565.790</td>
          <td>4.677112</td>
          <td>0.066832</td>
          <td>0.165065</td>
          <td>1.969400</td>
          <td>0.051777</td>
          <td>59.839565</td>
          <td>2.443914</td>
          <td>0.072125</td>
          <td>0.027301</td>
          <td>0.019054</td>
          <td>0.010321</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 77-79

View some plots


.. GENERATED FROM PYTHON SOURCE LINES 80-84

.. code-block:: Python


    fig: go.Figure = obj_mc_2d.plot_parallel(color='DHID')
    plotly.io.show(fig)




.. raw:: html
    :file: images/sphx_glr_01_interval_sample_001.html





.. GENERATED FROM PYTHON SOURCE LINES 85-87

.. code-block:: Python

    obj_mc_2d.query('DHID=="CBS02"').reset_index('DHID').plot_intervals(variables=['mass_dry', 'Fe', 'SiO2', 'Al2O3'],
                                                                        cumulative=False)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.35.2.min.js"></script>                <div id="b4fd847f-e044-45c4-95f5-09b1daf46a1c" class="plotly-graph-div" style="height:100%; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("b4fd847f-e044-45c4-95f5-09b1daf46a1c")) {                    Plotly.newPlot(                        "b4fd847f-e044-45c4-95f5-09b1daf46a1c",                        [{"hovertemplate":"component=mass_dry\u003cbr\u003einterval=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","line":{"color":"#636efa","dash":"solid","shape":"vh"},"marker":{"symbol":"circle"},"mode":"lines","name":"","orientation":"v","showlegend":false,"x":[26.6,26.85,27.7,28.0,28.6,28.95,29.3,29.6,29.9,30.3,30.7,30.85,31.2,31.5,31.9,32.15,32.65,32.95,33.3,33.8,34.1,34.5,34.75,35.0],"xaxis":"x4","y":[2.12,2.06,1.91,1.96,2.06,2.05,2.0,2.01,2.01,1.92,2.02,2.06,2.0,1.8,1.87,1.85,1.92,2.06,2.17,2.1100000000000003,1.92,2.21,2.22,2.22],"yaxis":"y4","type":"scatter"},{"hovertemplate":"component=Fe\u003cbr\u003einterval=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","line":{"color":"#636efa","dash":"solid","shape":"vh"},"marker":{"symbol":"circle"},"mode":"lines","name":"","orientation":"v","showlegend":false,"x":[26.6,26.85,27.7,28.0,28.6,28.95,29.3,29.6,29.9,30.3,30.7,30.85,31.2,31.5,31.9,32.15,32.65,32.95,33.3,33.8,34.1,34.5,34.75,35.0],"xaxis":"x3","y":[64.3,64.91,65.09,65.03,65.87,65.82000000000001,65.9,65.64000000000001,65.41,65.3,64.06,64.97,65.65,66.05,66.18,66.35,62.99,61.92999999999999,63.35999999999999,64.0,64.75,63.93000000000001,60.64999999999999,60.64999999999999],"yaxis":"y3","type":"scatter"},{"hovertemplate":"component=SiO2\u003cbr\u003einterval=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","line":{"color":"#636efa","dash":"solid","shape":"vh"},"marker":{"symbol":"circle"},"mode":"lines","name":"","orientation":"v","showlegend":false,"x":[26.6,26.85,27.7,28.0,28.6,28.95,29.3,29.6,29.9,30.3,30.7,30.85,31.2,31.5,31.9,32.15,32.65,32.95,33.3,33.8,34.1,34.5,34.75,35.0],"xaxis":"x2","y":[3.2299999999999995,2.9000000000000004,2.3899999999999997,2.22,1.69,2.0,1.9299999999999997,1.97,2.21,2.2500000000000004,3.0000000000000004,2.17,1.96,2.0,1.9499999999999997,2.0500000000000003,3.37,2.7899999999999996,2.22,2.2200000000000006,2.31,3.08,7.02,7.02],"yaxis":"y2","type":"scatter"},{"hovertemplate":"component=Al2O3\u003cbr\u003einterval=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","line":{"color":"#636efa","dash":"solid","shape":"vh"},"marker":{"symbol":"circle"},"mode":"lines","name":"","orientation":"v","showlegend":false,"x":[26.6,26.85,27.7,28.0,28.6,28.95,29.3,29.6,29.9,30.3,30.7,30.85,31.2,31.5,31.9,32.15,32.65,32.95,33.3,33.8,34.1,34.5,34.75,35.0],"xaxis":"x","y":[1.48,1.2799999999999998,1.01,0.9899999999999999,0.7499999999999999,0.8700000000000001,0.84,0.8299999999999998,0.9899999999999999,0.9699999999999999,1.6099999999999999,1.0199999999999998,0.8699999999999999,0.91,0.8699999999999999,0.84,1.45,1.2799999999999998,1.0600000000000003,1.04,0.93,0.88,0.88,0.88],"yaxis":"y","type":"scatter"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"anchor":"y","domain":[0.0,0.98],"title":{"text":"interval"}},"yaxis":{"anchor":"x","domain":[0.0,0.2275],"title":{"text":"value"}},"xaxis2":{"anchor":"y2","domain":[0.0,0.98],"matches":"x","showticklabels":false},"yaxis2":{"anchor":"x2","domain":[0.2575,0.485],"title":{"text":"value"}},"xaxis3":{"anchor":"y3","domain":[0.0,0.98],"matches":"x","showticklabels":false},"yaxis3":{"anchor":"x3","domain":[0.515,0.7425],"title":{"text":"value"}},"xaxis4":{"anchor":"y4","domain":[0.0,0.98],"matches":"x","showticklabels":false},"yaxis4":{"anchor":"x4","domain":[0.7725,1.0],"title":{"text":"value"}},"annotations":[{"font":{},"showarrow":false,"text":"Al2O3","textangle":90,"x":0.98,"xanchor":"left","xref":"paper","y":0.11375,"yanchor":"middle","yref":"paper"},{"font":{},"showarrow":false,"text":"SiO2","textangle":90,"x":0.98,"xanchor":"left","xref":"paper","y":0.37124999999999997,"yanchor":"middle","yref":"paper"},{"font":{},"showarrow":false,"text":"Fe","textangle":90,"x":0.98,"xanchor":"left","xref":"paper","y":0.62875,"yanchor":"middle","yref":"paper"},{"font":{},"showarrow":false,"text":"mass_dry","textangle":90,"x":0.98,"xanchor":"left","xref":"paper","y":0.88625,"yanchor":"middle","yref":"paper"}],"legend":{"tracegroupgap":0},"margin":{"t":60},"title":{"text":"Drill program (DHID==\"CBS02\") (reset_index)"}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.682 seconds)


.. _sphx_glr_download_auto_examples_examples_02_interval_sample_01_interval_sample.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 01_interval_sample.ipynb <01_interval_sample.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 01_interval_sample.py <01_interval_sample.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
