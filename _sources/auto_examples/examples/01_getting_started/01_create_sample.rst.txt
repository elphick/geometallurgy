
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/examples/01_getting_started/01_create_sample.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_examples_01_getting_started_01_create_sample.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_examples_01_getting_started_01_create_sample.py:


Create Sample
=============

The base object is a `Sample`, so let's create one

.. GENERATED FROM PYTHON SOURCE LINES 7-11

.. code-block:: Python

    import pandas as pd
    from elphick.geomet.utils.data import sample_data
    from elphick.geomet import Sample








.. GENERATED FROM PYTHON SOURCE LINES 12-15

Load Data
---------
First, let's load some toy data.  For demonstration this toy data has mixed case column names.

.. GENERATED FROM PYTHON SOURCE LINES 15-19

.. code-block:: Python


    df: pd.DataFrame = sample_data(include_moisture=False)
    df






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>FE</th>
          <th>SIO2</th>
          <th>al2o3</th>
          <th>LOI</th>
          <th>group</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>100.0</td>
          <td>90.0</td>
          <td>57.0</td>
          <td>5.2</td>
          <td>3.0</td>
          <td>5.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>1</th>
          <td>90.0</td>
          <td>80.0</td>
          <td>59.0</td>
          <td>3.1</td>
          <td>1.7</td>
          <td>4.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>2</th>
          <td>110.0</td>
          <td>90.0</td>
          <td>61.0</td>
          <td>2.2</td>
          <td>0.9</td>
          <td>3.0</td>
          <td>grp_2</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 20-24

Create Sample
-------------
The `Sample` object has a `data` attribute that is a pandas DataFrame.  Where column names are recognised
as components the case is converted to the represent the chemical symbols.

.. GENERATED FROM PYTHON SOURCE LINES 24-28

.. code-block:: Python


    sample: Sample = Sample(data=df, name='sample')
    sample.data





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

     2025-03-03 00:31:30,286 - DEBUG - Data has been set.
     2025-03-03 00:31:30,286 - INFO - Elapsed time for data: 0:00:00.206286
     2025-03-03 00:31:30,340 - INFO - Elapsed time for data: 0:00:00.001855
     2025-03-03 00:31:30,345 - INFO - Elapsed time for data: 0:00:00.001833


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
          <th>group</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>100.0</td>
          <td>90.0</td>
          <td>10.000000</td>
          <td>57.0</td>
          <td>5.2</td>
          <td>3.0</td>
          <td>5.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>1</th>
          <td>90.0</td>
          <td>80.0</td>
          <td>11.111111</td>
          <td>59.0</td>
          <td>3.1</td>
          <td>1.7</td>
          <td>4.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>2</th>
          <td>110.0</td>
          <td>90.0</td>
          <td>18.181818</td>
          <td>61.0</td>
          <td>2.2</td>
          <td>0.9</td>
          <td>3.0</td>
          <td>grp_2</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 29-32

Aggregation
-----------
The aggregate of the mass-composition is available via the `aggregate` property of the `Sample` object.

.. GENERATED FROM PYTHON SOURCE LINES 32-35

.. code-block:: Python


    sample.aggregate






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>300.0</td>
          <td>260.0</td>
          <td>13.333333</td>
          <td>59.0</td>
          <td>3.515385</td>
          <td>1.873077</td>
          <td>4.0</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 36-37

For aggregation/weight-average by a grouping variable we can use the `weight_average` method.

.. GENERATED FROM PYTHON SOURCE LINES 37-39

.. code-block:: Python


    sample.weight_average(group_by='group')





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
        </tr>
        <tr>
          <th>group</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>grp_1</th>
          <td>190.0</td>
          <td>170.0</td>
          <td>10.526316</td>
          <td>57.941176</td>
          <td>4.211765</td>
          <td>2.388235</td>
          <td>4.529412</td>
        </tr>
        <tr>
          <th>grp_2</th>
          <td>110.0</td>
          <td>90.0</td>
          <td>18.181818</td>
          <td>61.000000</td>
          <td>2.200000</td>
          <td>0.900000</td>
          <td>3.000000</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.344 seconds)


.. _sphx_glr_download_auto_examples_examples_01_getting_started_01_create_sample.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 01_create_sample.ipynb <01_create_sample.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 01_create_sample.py <01_create_sample.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
